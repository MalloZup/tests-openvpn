port 1194
proto udp
dev tun

# The keepalive directive causes ping-like  messages to be sent back and forth over
# the link so that each side knows when  the other side has gone down.
# Ping every 10 seconds, assume that remote  peer is down if no ping received during  a 120 second time period.

keepalive 10 30

persist-key
persist-tun

# Enable compression on the VPN link.  If you enable it here, you must also  enable it in the client config file.

comp-lzo

# Configure server mode and supply a VPN subnet  for OpenVPN to draw client addresses from.
# The server will take 10.8.0.1 for itself,  the rest will be made available to clients.
# Each client will be able to reach the server  on 10.8.0.1.

server 10.8.0.0 255.255.255.0

# Maintain a record of client <-> virtual IP address associations in this file.  If OpenVPN goes down or
# is restarted, reconnecting clients can be assigned  the same virtual IP address from the pool that was
# previously assigned.

ifconfig-pool-persist ipp.txt

auth SHA512
cipher AES-256-CBC
tls-cipher DHE-RSA-AES256-SHA


## ====== LOGGING-PART ==============
# Output a short status file showing  current connections, truncated  and rewritten every minute.
status openvpn-status.log
# MAX VERBOSE
verb 9
log         openvpn.log
# Silence repeating messages.  At most 20  sequential messages of the same message  category will be output to the log.
mute 20
mute-replay-warnings

## ==== CERTS and keys, security

ca	 /etc/openvpn/SUSE/ca.crt
cert	 /etc/openvpn/SUSE/blaise.crt
key 	 /etc/openvpn/SUSE/server_pascal.key

# For extra security beyond that provided  by SSL/TLS, create an "HMAC firewall"  to help block DoS attacks and UDP port flooding.
# The server and each client must have  a copy of this key.  The second parameter should be '0'  on the server and '1' on the clients.

tls-auth /etc/openvpn/SUSE/ta.key 0
# dh is 2048
dh 	/etc/openvpn/SUSE/dh.pem 

# It's a good idea to reduce the OpenVPN
# daemon's privileges after initialization.
#

user nobody
group nobody



